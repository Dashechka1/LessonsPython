# Ветвления и условные операторы

# За ветвления отвечает оператор if
# Синтаксис

"""
if условие(группа условий):
####Что-то внутри if

Что-то здесь уже не в if

1. Полное ветвление
if условие(группа условий): (если оно/они будет/будут выполнено)
    что-то делаем
elif другое условие: (проверяется если не выполнилось условие в if)
    делаем что-то другое
... сколько угодно elif
elif еще одно условие:
    еще действия

else:
    что-то делаем, если не выполнилось ни одно условие

2. Неполное ветвление
if условие:
    что-то делаем
"""

# Условные операторы
# or - или
# and - и
# ()
# not - отрицание

# Операторы сравнения
# > < - больше меньше
# >= <= больше равно меньше равно
# == равно ли?
# != не равно ли?

# if 0 <= a <= 10

"""
if (условие_1 or условие_2) and not условие_3:
    что-то
"""

# Циклы
# 1. for - цикл со счетчиком
# 2. while - цикл с условием

"""
for счетчик in range(start, end, step):
    какие-то действия

Используется, если мы знаем, сколько раз нужно что-то сделать
Счетчик - переменная типа int

start - с какого значения счетчика начинается цикл
end - если счетчик > end - 1 цикл останавливается   
step - шаг цикла(на сколько увеличиваем счетчик за одну итерацию)

Итерация - один шаг цикла
"""

for i in range(0, 10, 1):
    print(i)

print()
for j in range(0, 11, 2):
    print(j)

print()
for k in range(9, -1, -1):
    print(k)


print()
# Чаще пишут так
# Цикл по умолчанию считает с 0 до end - 1 с шагом 1
for i in range(10):
    print(i)

"""
while условие:
    что-то
    
while True:
    что-то делаем
    if условие остановки:
        завершить цикл
"""

# Оператор прерывания цикла break
# Как только в цикле встречается break - цикл останавливается

print()
for i in range(10):
    print(i)
    if i == 5:
        break

print()

c = 0
while True:
    if c == 10:
        break
    c += 2
    print(c)

# Оператор перехода на новую итерацию continue
print()
for i in range(10):
    if 3 <= i <= 5:
        continue
    print(i)

"""
Задача 1. Вводится некоторое целое число N - количество вводимых чисел.
Далее вводятся сами числа(целые). Необходимо найти сумму четных чисел
"""

print()
N = int(input("N = "))
s = 0

for _ in range(N):
    num = int(input("Введите число: "))
    if num % 2 == 0:
        print(s)
        s += num
        print(s)
print(s)

"""
Задача 2. Вводится некоторое количество целых чисел в 
промежутке от -1000 до 1000.
Признаком окончания ввода является 0.
Необходимо вычислить разность между максимальным и минимальным 
введенным числом, не считая 0.
"""

print()
max_num = -1000
min_num = 1000

while True:
    num = int(input("Введите число: "))

    # Условие выхода из цикла
    if num == 0:
        break

    """
    if num > max_num:
        max_num = num
    if num < min_num:
        min_num = num
    """
    print(max_num, min_num)

    max_num = max(max_num, num)
    min_num = min(min_num, num)

    print(max_num, min_num)

print(max_num - min_num)

